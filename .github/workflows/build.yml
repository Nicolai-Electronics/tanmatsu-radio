name: Build
run-name: Build
on: [push]
jobs:
  Build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        device: ["tanmatsu"]
    steps:
      - run: sudo apt-get install git wget flex bison gperf python3 python3-pip python3-venv cmake ninja-build ccache libffi-dev libssl-dev dfu-util libusb-1.0-0 lib64z1
      - name: Check out repository
        uses: actions/checkout@v4
      - run: make prepare
      - run: make build DEVICE=${{ matrix.device }}
      - run: mv build/${{ matrix.device }}/bootloader/*.bin build/${{ matrix.device }}/
      - run: mv build/${{ matrix.device }}/bootloader/*.elf build/${{ matrix.device }}/
      - run: mv build/${{ matrix.device }}/partition_table/*.bin build/${{ matrix.device }}/
      - run: make distrib
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.device }}
          path: |
            build/${{ matrix.device }}/*.bin
            build/${{ matrix.device }}/*.elf
      - run: zlib-flate -compress=9 < build/${{ matrix.device }}/bootloader.bin > build/${{ matrix.device }}/bootloader.zz
      - run: zlib-flate -compress=9 < build/${{ matrix.device }}/partition-table.bin > build/${{ matrix.device }}/partition-table.zz
      - run: zlib-flate -compress=9 < build/${{ matrix.device }}/${{ matrix.device }}-radio.bin > build/${{ matrix.device }}/${{ matrix.device }}-radio.zz
      - name: Upload artifacts for OTA update
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.device }}-ota
          path: |
            build/${{ matrix.device }}/*.zz
            build/${{ matrix.device }}/instructions.json
